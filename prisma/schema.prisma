// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  CUSTOMER
  ADMIN
  SUPER_ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  PENDING_VERIFICATION
}

model User {
  id                String     @id @default(cuid())
  email             String     @unique
  password          String
  firstName         String?
  lastName          String?
  role              UserRole   @default(CUSTOMER)
  status            UserStatus @default(PENDING_VERIFICATION)
  emailVerified     Boolean    @default(false)
  emailVerifiedAt   DateTime?
  
  // Profile information
  company           String?
  phone             String?
  website           String?
  avatar            String?
  bio               String?
  
  // Security
  lastLoginAt       DateTime?
  loginAttempts     Int        @default(0)
  lockedUntil       DateTime?
  passwordResetToken String?
  passwordResetExpires DateTime?
  emailVerificationToken String?
  
  // Timestamps
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  
  // Relations
  sessions          Session[]
  auditLogs         AuditLog[]
  
  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("sessions")
}

model AuditLog {
  id        String   @id @default(cuid())
  userId    String?
  action    String
  resource  String?
  details   Json?
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
  
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  @@map("audit_logs")
}
